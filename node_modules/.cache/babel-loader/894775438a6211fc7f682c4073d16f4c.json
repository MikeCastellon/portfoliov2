{"ast":null,"code":"import _regeneratorRuntime from \"/Users/mike/Desktop/portfolioreact/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/mike/Desktop/portfolioreact/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"/Users/mike/Desktop/portfolioreact/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _defineProperty from \"/Users/mike/Desktop/portfolioreact/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/mike/Desktop/portfolioreact/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/mike/Desktop/portfolioreact/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/mike/Desktop/portfolioreact/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/mike/Desktop/portfolioreact/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"/Users/mike/Desktop/portfolioreact/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/mike/Desktop/portfolioreact/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectWithoutProperties from \"/Users/mike/Desktop/portfolioreact/portfolio/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/Users/mike/Desktop/portfolioreact/portfolio/src/components/contactus/contactus.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { Form, FormGroup, Input, Label, Button, Alert } from 'reactstrap';\nvar emailRegex = RegExp(/^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/);\n\nvar formValid = function formValid(_ref) {\n  var formErrors = _ref.formErrors,\n      rest = _objectWithoutProperties(_ref, [\"formErrors\"]);\n\n  var valid = true; // validate form errors being empty\n\n  Object.values(formErrors).forEach(function (val) {\n    val.length > 0 && (valid = false);\n  }); // validate the form was filled out\n\n  Object.values(rest).forEach(function (val) {\n    val === null && (valid = false);\n  });\n  return valid;\n};\n\nvar Contactus =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Contactus, _Component);\n\n  function Contactus() {\n    var _this;\n\n    _classCallCheck(this, Contactus);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Contactus).call(this));\n\n    _this.handleChange = function (e) {\n      var _e$target = e.target,\n          name = _e$target.name,\n          value = _e$target.value;\n\n      _this.setState(_defineProperty({}, e.target.name, e.target.value));\n\n      var formErrors = _objectSpread({}, _this.state.formErrors);\n\n      switch (name) {\n        case \"contactName\":\n          formErrors.contactName = value.length < 3 ? \"minimum 3 characters required\" : \"\";\n          break;\n\n        case \"email\":\n          formErrors.email = emailRegex.test(value) ? \"\" : \"invalid email address\";\n          break;\n\n        case \"message\":\n          formErrors.message = value.length < 3 ? \"minimum 3 characters required\" : \"\";\n          break;\n\n        default:\n          break;\n      }\n\n      _this.setState(_defineProperty({\n        formErrors: formErrors\n      }, name, value));\n    };\n\n    _this.state = {\n      contactName: '',\n      email: '',\n      message: '',\n      formErrors: {\n        contactName: '',\n        email: '',\n        message: ''\n      }\n    };\n    _this.handleChange = _this.handleChange.bind(_assertThisInitialized(_this));\n    _this.handleSubmit = _this.handleSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Contactus, [{\n    key: \"handleSubmit\",\n    value: function () {\n      var _handleSubmit = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(e) {\n        var _this$state, contactName, email, message, form;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                e.preventDefault();\n                _this$state = this.state, contactName = _this$state.contactName, email = _this$state.email, message = _this$state.message;\n\n                if (!(formValid(this.state) && e.target.checkValidity())) {\n                  _context.next = 9;\n                  break;\n                }\n\n                alert(\"Message sent successfully\");\n                _context.next = 6;\n                return axios.post('/api/form', {\n                  contactName: contactName,\n                  email: email,\n                  message: message\n                }).then(this.setState({\n                  contactName: '',\n                  email: '',\n                  message: ''\n                }));\n\n              case 6:\n                form = _context.sent;\n                _context.next = 10;\n                break;\n\n              case 9:\n                alert(\"Not all fields filled out correctly\");\n\n              case 10:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function handleSubmit(_x) {\n        return _handleSubmit.apply(this, arguments);\n      }\n\n      return handleSubmit;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var formErrors = this.state.formErrors;\n      return React.createElement(\"div\", {\n        className: \"contactsection\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 107\n        },\n        __self: this\n      }, React.createElement(\"section\", {\n        id: \"contact\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row section-head\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 109\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"two columns header-col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, \"Get In Touch.\"))), React.createElement(\"div\", {\n        className: \"ten columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"lead\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, \"Feel free to contact me directly below or through any of my social media accounts.\"))), React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"eight columns\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"wrapper animated bounceInLeft\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(Form, {\n        onSubmit: this.handleSubmit,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"contactName\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Name:\"), formErrors.contactName.length > 0 && React.createElement(\"span\", {\n        className: \"errorMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, formErrors.contactName), React.createElement(Input, {\n        className: formErrors.contactName.length > 0 ? \"error\" : null,\n        type: \"text\",\n        name: \"contactName\",\n        onChange: this.handleChange,\n        value: this.state.contactName,\n        required: true,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"email\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Email:\"), formErrors.email.length > 0 && React.createElement(\"span\", {\n        className: \"errorMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, formErrors.email), React.createElement(Input, {\n        className: formErrors.email.length > 0 ? \"error\" : null,\n        type: \"text\",\n        name: \"email\",\n        onChange: this.handleChange,\n        value: this.state.email,\n        required: true,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"message\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Message:\"), formErrors.message.length > 0 && React.createElement(\"span\", {\n        className: \"errorMessage\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, formErrors.message), React.createElement(Input, {\n        className: formErrors.message.length > 0 ? \"error\" : null,\n        type: \"textarea\",\n        name: \"message\",\n        onChange: this.handleChange,\n        value: this.state.message,\n        required: true,\n        noValidate: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 160\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"submit \",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Submit\"))))))));\n    }\n  }]);\n\n  return Contactus;\n}(Component);\n\nexport { Contactus as default };","map":{"version":3,"sources":["/Users/mike/Desktop/portfolioreact/portfolio/src/components/contactus/contactus.js"],"names":["React","Component","axios","Form","FormGroup","Input","Label","Button","Alert","emailRegex","RegExp","formValid","formErrors","rest","valid","Object","values","forEach","val","length","Contactus","handleChange","e","target","name","value","setState","state","contactName","email","test","message","bind","handleSubmit","preventDefault","checkValidity","alert","post","then","form"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport axios from  'axios';\nimport { Form, FormGroup, Input, Label, Button, Alert } from 'reactstrap'\n\nconst emailRegex = RegExp(\n  /^[a-zA-Z0-9.!#$%&â€™*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/\n);\n\nconst formValid = ({ formErrors, ...rest }) => {\n  let valid = true;\n\n  // validate form errors being empty\n  Object.values(formErrors).forEach(val => {\n    val.length > 0 && (valid = false);\n  });\n\n  // validate the form was filled out\n  Object.values(rest).forEach(val => {\n    val === null && (valid = false);\n  });\n\n  return valid;\n};\n\n\nexport default class Contactus extends Component {\n  constructor(){\n    super()\n\n    this.state = {\n      contactName: '',\n      email: '',\n      message: '',\n      formErrors: {\n        contactName: '',\n        email: '',\n        message: ''\n      }\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n\n  }\n\n  handleChange = (e) => {\n     const { name, value } = e.target;\n    this.setState({ [e.target.name]: e.target.value })\n\n\n    let formErrors = { ...this.state.formErrors };\n\n    switch (name) {\n      case \"contactName\":\n        formErrors.contactName =\n          value.length < 3 ? \"minimum 3 characters required\" : \"\";\n        break;\n        case \"email\":\n        formErrors.email = emailRegex.test(value)\n          ? \"\"\n          : \"invalid email address\";\n        break;\n      case \"message\":\n        formErrors.message =\n          value.length < 3 ? \"minimum 3 characters required\" : \"\";\n        break;\n      default:\n        break;\n    }\n\n    this.setState({ formErrors, [name]: value });\n  };\n\n\n\n   async handleSubmit(e) {\n\n    e.preventDefault()\n\n\n    const { contactName, email, message } = this.state\n    if (formValid(this.state) && e.target.checkValidity()){\n      alert(\"Message sent successfully\")\n      const form = await axios.post('/api/form', {\n        contactName,\n        email,\n        message\n       })\n      .then(\n        this.setState({\n          contactName: '',\n          email: '',\n          message: '',\n          })\n        )\n    }\n\n    else {\n      alert(\"Not all fields filled out correctly\")\n    }\n  }\n\n  render() {\n    const { formErrors } = this.state;\n\nreturn (\n    <div className=\"contactsection\">\n      <section id=\"contact\">\n      <div className=\"row section-head\">\n        <div className=\"two columns header-col\">\n          <h1><span>Get In Touch.</span></h1>\n        </div>\n        <div className=\"ten columns\">\n          <p className=\"lead\">Feel free to contact me directly below or through any of my social media accounts.\n          </p>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"eight columns\">\n          {/* form */}\n          <div className=\"wrapper animated bounceInLeft\">\n            <Form onSubmit= { this.handleSubmit } noValidate >\n              <FormGroup>\n                <Label for='contactName'>Name:</Label>\n                    {formErrors.contactName.length > 0 && (\n                      <span className=\"errorMessage\">{formErrors.contactName}</span>\n                    )}\n                  <Input\n                    className={formErrors.contactName.length > 0 ? \"error\" : null}\n                    type='text'\n                    name='contactName'\n                    onChange={ this.handleChange }\n                    value={this.state.contactName}\n                    required\n                    noValidate />\n\n              </FormGroup>\n\n              <FormGroup>\n                <Label for='email'>Email:</Label>\n                  {formErrors.email.length > 0 && (\n                    <span className=\"errorMessage\">{formErrors.email}</span>\n                  )}\n                  <Input\n                    className={formErrors.email.length > 0 ? \"error\" : null}\n                    type='text'\n                    name='email'\n                    onChange={ this.handleChange }\n                    value= {this.state.email}\n                    required\n                    noValidate />\n\n              </FormGroup>\n\n              <FormGroup>\n                <Label for='message'>Message:</Label>\n                    {formErrors.message.length > 0 && (\n                      <span className=\"errorMessage\">{formErrors.message}</span>\n                    )}\n                  <Input\n                    className={formErrors.message.length > 0 ? \"error\" : null}\n                    type='textarea'\n                    name='message'\n                    onChange={ this.handleChange }\n                    value={ this.state.message }\n                    required\n                    noValidate />\n\n              </FormGroup>\n                <div>\n                  <Button className=\"submit \">Submit</Button>\n                </div>\n          </Form>\n        </div>\n          </div>\n\n      </div>\n      </section>\n    </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}